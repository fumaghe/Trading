name: Volume Watch (every 5m)

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: volwatch
  cancel-in-progress: true

jobs:
  volwatch:
    runs-on: ubuntu-latest
    env:
      PYTHONIOENCODING: "utf-8"
      TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
      TG_CHAT_ID:   ${{ secrets.TG_CHAT_ID }}
      TZ: Europe/Rome

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests tenacity

      - name: Run volume_watch.py (single Telegram message)
        run: |
          python volume_watch.py \
            --mode from-screener \
            --min-liq 200000 \
            --workers 12 \
            --max-tickers-scan 40 \
            --dominance 0.30 \
            --rps-cg 0.5 \
            --rps-ds 2.0 \
            --funnel-show 100 \
            --skip-unchanged-days 0 \
            --delta-mode approx \
            --send-telegram
            # opzionali:
            # --min-cov 2 \
            # --threshold-x 10

      - name: Commit state (volwatch)
        if: always()
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add state/volwatch/*.json state/telegram/msg_volwatch.html state/top_pairs.json || true
          if ! git diff --cached --quiet; then
            git commit -m "volwatch: update $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            # rebase + retry, poi fallback a force-with-lease
            for attempt in 1 2 3; do
              git fetch origin main
              if git pull --rebase origin main; then
                if git push origin HEAD:main; then
                  echo "Push OK (attempt $attempt)"; break
                fi
              else
                git rebase --abort || true
              fi
              if [ $attempt -eq 3 ]; then
                echo "Rebase/push failed, trying force-with-lease"
                git push --force-with-lease origin HEAD:main && echo "Force-with-lease push OK"
              fi
              sleep 2
            done
          else
            echo "No state changes to commit."
          fi
