name: Volume Watch (every 30m)

on:
  schedule:
    - cron: "*/30 * * * *"   # ogni 30 minuti (UTC)
  workflow_dispatch: {}

permissions:
  contents: write


jobs:
  volwatch:
    runs-on: ubuntu-latest
    env:
      PYTHONIOENCODING: "utf-8"
      TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
      TG_CHAT_ID:   ${{ secrets.TG_CHAT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # Scegli una delle due:
      # (A) usa direttamente test4.py ogni 30' (self-contained)
      - name: Run volume_watch.py (from-screener)
        run: |
          python volume_watch.py --mode from-screener --min-liq 200000 --workers 12 --max-tickers-scan 40 --dominance 0.30 --rps-cg 0.5 --rps-ds 2.0 --funnel-show 100 --skip-unchanged-days 0

      # (B) IN ALTERNATIVA: se run_pipeline salva state/top_pairs.json
      # - name: Run volume_watch.py (from-file)
      #   run: |
      #     python volume_watch.py --mode from-file --pairs-file state/top_pairs.json

      - name: Send Telegram — volume watch (chunked)
        if: env.TG_BOT_TOKEN != '' && env.TG_CHAT_ID != ''
        shell: bash
        run: |
          set -e
          FILE="state/telegram/msg_volwatch.html"
          if [ ! -f "$FILE" ]; then
            echo "⚠️ Nessun messaggio di volume watch generato."
            exit 0
          fi